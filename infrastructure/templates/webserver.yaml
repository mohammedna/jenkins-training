---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template vpc_single_instance_in_subnet.template:
  Sample template showing how to create a VPC and add an EC2 instance with an Elastic
  IP address and a security group. **WARNING** This template creates an Amazon EC2
  instance. You will be billed for the AWS resources used if you create a stack from
  this template.'
Parameters:
  ApplicationName:
    Description: Name of the Application
    Type: String
  Environment:
    Description: Name of the Environment
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: String
  BillingTag:
    Description: Tag which is used for billing
    Type: String
  VPC:
    Description: VPC Id
    Type: String
  SubnetAPublic:
    Description: Use SubnetAPublic or SubnetAPrivate output from vpc stack. If you choose SubnetAPrivate you need a NAT instance or a NAT gateway
    Type: AWS::EC2::Subnet::Id
  InstanceType:
    Type: String
    Default: t1.micro
    AllowedValues:
    - t1.micro
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.xlarge
    - m3.2xlarge
    - c1.xlarge
    - cc1.4xlarge
    Description: EC2 instance type (e.g. m1.small, m1.large, m1.xlarge, m2.xlarge)
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-7f418316
    us-west-1:
      AMI: ami-951945d0
    us-west-2:
      AMI: ami-16fd7026
    eu-west-1:
      AMI: ami-24506250
    sa-east-1:
      AMI: ami-3e3be423
    ap-southeast-1:
      AMI: ami-74dda626
    ap-southeast-2:
      AMI: ami-b3990e89
    ap-northeast-1:
      AMI: ami-dcfa4edd
Resources:

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
  WebServerInstance:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Apache Webserver
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'

    Properties:
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: "InstanceSecurityGroup"
          SubnetId:
            Ref: "SubnetAPublic"
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      Tags:
      - Key: Name
        Value: !Sub '${ApplicationName}-${Environment}'
      - Key: Billing
        Value: !Ref BillingTag
      UserData:
        Fn::Base64:
            !Sub |
              #!/bin/bash -x
              yum update
              yum install -y httpd
              service httpd start
              # Signal the status from instance
              /opt/aws/bin/cfn-signal -e $?  -r "WebServer setup complete" '${WebServerWaitHandle}'


  WebServerWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  WebServerWaitCondition:
    DependsOn: WebServerInstance
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Handle:
        Ref: WebServerWaitHandle
      Timeout: '600'

Outputs:
  URL:
    Value: !GetAtt WebServerInstance.PublicIp
    Description: Newly created WebServer URL
